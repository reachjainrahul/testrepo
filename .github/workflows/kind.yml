name: Kind
on:
  pull_request:
    branches:
      - master
      - release-*
      - feature/*
  push:
    branches:
      - master
      - release-*
      - feature/*

  workflow_dispatch:

env:
  KIND_VERSION: v0.12.0
  KUBECTL_VERSION: v1.24.1
  TERRAFORM_VERSION: 0.13.5

jobs:
  check-changes:
    name: Check whether tests need to be run based on diff
    runs-on: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: antrea-io/has-changes@v2
        id: check_diff
        with:
          paths-ignore: docs/*
    outputs:
      has_changes: ${{ steps.check_diff.outputs.has_changes }}

  test-integration-azure:
    name: Integration tests on a Kind cluster for Azure Cloud
    needs: check-changes
    if: ${{ needs.check-changes.outputs.has_changes == 'yes' }}
    runs-on: [ubuntu-latest]
    steps:
      - name: Install Prerequisites
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          mv ./kind /usr/local/bin/kind
          curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
          curl -Lo ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip ./terraform.zip
          chmod +x ./terraform && mv ./terraform /usr/local/bin/terraform

      - uses: actions/checkout@v3
      - name: Build Cloud Controller Docker image
        run: |
          make build

      - name: Pull Docker Images to be used in the tests
        run: |
          docker pull kennethreitz/httpbin
          docker pull byrnedo/alpine-curl
          docker pull quay.io/jetstack/cert-manager-controller:v1.8.2
          docker pull quay.io/jetstack/cert-manager-webhook:v1.8.2
          docker pull quay.io/jetstack/cert-manager-cainjector:v1.8.2
          docker pull projects.registry.vmware.com/antrea/antrea-ubuntu:v1.7.0

      - name: Create kind cluster
        run: |
          hack/install-cloud-tools.sh
          ci/kind/kind-setup.sh create kind

      - name: Run integration test
        env:
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_azure_client_subscription_id: ${{ secrets.AZURE_CLIENT_SUBSCRIPTION_ID }}
          TF_VAR_azure_client_tenant_id: ${{ secrets.AZURE_CLIENT_TENANT_ID }}
          TF_VAR_region: ${{ secrets.region }}
          TF_VAR_owner: "cloudcontroller"
          AZURE_SSH_PRIV_KEY: ${{ secrets.AZURE_SSH_PRIV_KEY }}
          AZURE_SSH_PUB_KEY: ${{ secrets.AZURE_SSH_PUB_KEY }}
        run: |
          hack/install-cloud-tools.sh
          mkdir log
          eval $(ssh-agent -s)
          echo "${AZURE_SSH_PRIV_KEY}" | tr -d '\r' | ssh-add -
          mkdir -p $HOME/.ssh
          chmod 700 $HOME/.ssh
          echo "$AZURE_SSH_PUB_KEY" > $HOME/.ssh/id_rsa.pub
          ci/bin/integration.test -ginkgo.v -ginkgo.focus=".*Test-azure.*" -kubeconfig=$HOME/.kube/config -cloud-provider=Azure -support-bundle-dir=$(pwd)/log

      - name: Tar log files
        if: ${{ failure() }}
        run: tar -czf log.tar.gz log

      - name: Upload test log
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: integration-test-azure.tar.gz
          path: log.tar.gz
          retention-days: 1

      - name: Clean up
        if: ${{ always() }}
        env:
          TF_VAR_azure_client_id: ${{ secrets.AZURE_CLIENT_ID }}
          TF_VAR_azure_client_secret: ${{ secrets.AZURE_CLIENT_SECRET }}
          TF_VAR_azure_client_subscription_id: ${{ secrets.AZURE_CLIENT_SUBSCRIPTION_ID }}
          TF_VAR_azure_client_tenant_id: ${{ secrets.AZURE_CLIENT_TENANT_ID }}
          TF_VAR_region: ${{ secrets.region }}
          TF_VAR_owner: "cloudcontroller"
        run: |
           ~/terraform/azure-tf destroy

  test-integration-aws:
    name: Integration tests on a Kind cluster for Aws Cloud
    needs: check-changes
    if: ${{ needs.check-changes.outputs.has_changes == 'yes' }}
    runs-on: [ubuntu-latest]
    steps:
      - name: Install Prerequisites
        run: |
          curl -Lo ./kind https://github.com/kubernetes-sigs/kind/releases/download/${KIND_VERSION}/kind-$(uname)-amd64
          chmod +x ./kind
          mv ./kind /usr/local/bin/kind
          curl -LO https://storage.googleapis.com/kubernetes-release/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl
          chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
          curl -Lo ./terraform.zip https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip
          unzip ./terraform.zip
          chmod +x ./terraform && mv ./terraform /usr/local/bin/terraform

      - uses: actions/checkout@v3
      - name: Build Cloud Controller Docker image
        run: |
          make build

      - name: Pull Docker Images to be used in the tests
        run: |
          docker pull kennethreitz/httpbin
          docker pull byrnedo/alpine-curl
          docker pull quay.io/jetstack/cert-manager-controller:v1.8.2
          docker pull quay.io/jetstack/cert-manager-webhook:v1.8.2
          docker pull quay.io/jetstack/cert-manager-cainjector:v1.8.2
          docker pull projects.registry.vmware.com/antrea/antrea-ubuntu:v1.7.0

      - name: Create kind cluster
        run: |
          hack/install-cloud-tools.sh
          ci/kind/kind-setup.sh create kind

      - name: Run integration test
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_access_key_secret: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          TF_VAR_aws_key_pair_name: ${{ secrets.AWS_KEY_PAIR_NAME }}
          AWS_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
          TF_VAR_owner: "cloudcontroller"
        run: |
          hack/install-cloud-tools.sh
          mkdir log
          eval $(ssh-agent -s)
          echo "${AWS_SSH_KEY}" | tr -d '\r' | ssh-add -
          mkdir -p $HOME/.ssh
          chmod 700 $HOME/.ssh
          ci/bin/integration.test -ginkgo.v -ginkgo.focus=".*Test-aws.*" -kubeconfig=$HOME/.kube/config -cloud-provider=AWS -support-bundle-dir=$(pwd)/log

      - name: Tar log files
        if: ${{ failure() }}
        run: tar -czf log.tar.gz log

      - name: Upload test log
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: integration-test-aws.tar.gz
          path: log.tar.gz
          retention-days: 1

      - name: Clean up
        if: ${{ always() }}
        env:
          TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_aws_access_key_secret: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          TF_VAR_aws_key_pair_name: ${{ secrets.AWS_KEY_PAIR_NAME }}
          TF_VAR_owner: "cloudcontroller"
        run: |
           ~/terraform/aws-tf destroy
